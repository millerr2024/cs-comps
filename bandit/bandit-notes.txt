Level 0:
-ssh'd into bandit.labs.overthewire.org with the following command:
	ssh -p 2220 bandit0@bandit.labs.overthewire.org
-in the readme in the home directory, found the password:
	NH2SXQwcBdpmTEzi3bvBHMM9H66vVXjL
-Note: -p specifies port number

Level 1:
-ran the following commands to get the contents of a file in the home directory called -:
	cat ./-
-The contents of - were as follows:
	rRGizSaX8Mk1RTb1CNQoXTcYZWU6lgzi

Level 2:
-I ran the following command to read the contents of the file spaces in this filename located in the home directory:
	more spaces\ in\ this\ filename
-Password for next level:
	aBZ0W5EmUfAf7kHTQeOwd8bauFJ2lAiG
-Note: \ comes before spaces in filenames

Level 3:
-ran the following commands to read the contents of the .hidden file:
	cd inhere
	ls -als
	more .hidden
-Password for next level:
	2EW7BBsr6aMMoJ2HjW067dm8EgX26xNe
-Note: the -a flag means "do not ignore entries starting with ."

Level 4:
-ran the following commands to find and read the only human-readable file in the inhere directory:
	cd inhere
	more ./-file00
	more ./-file01
	more ./-file02
	more ./-file03
	more ./-file04
	more ./-file05
 	more ./-file06
	more ./-file07
-I'm sure there must be an easier way to do this. I'm not sure what it'd be.
-Password for next level:
	lrIWWI6bB37kxfiCQZqUdOIYfr6eEeqR

Level 5:
-Ran the following commands to find and read a file somewhere under the inhere directory that's human readable, 1033 bytes in size, and not executable:
	find . -size 1033c \! -executable
	more inhere/maybehere07/.file2
-Password for next level:
	P4L4vucdmLnm8I7Vl7jG1ApGSfjYKqJU
-Note: the . in the above comand means start looking from the current directory. -size specifies the size of the file to look for and the c means bytes. \! -executable means exclude executables.

Level 6:
-Ran the following commands to find and read a file somewhere on the server that's owned by the user bandit7, owned by the group bandit6, and 33 bytes in size:
	find / -user bandit7 -group bandit6 -size 33c
	more /var/lib/dpkg/info/bandit7.password
-Password for next level:
	z7WtoNQU2XfjmMtWA8u5rN4vzqu4v99S
-Note: find / means look from /. The -user bandit7 above means look for a file owned by user bandit7. -group bandit6 means look for a file that's owned by the group bandit6.  

Level 7:
-Ran the following commands to find the password for the next level stored in the file data.txt next to the word millionth:
	cat data.txt | grep millionth
-Password for next level:
	TESKZC0XvTetK0S9xNwm25STk5iWrBvP
-Note: | basically means use the output of one command as the input to the other. grep returns the result of a search.

Level 8:
-Ran the following command to find the password for the next level stored in the file data.txt and is the only line of text that occurs only once:
	sort data.txt | uniq -u
-Password for next level:
	EN632PlfYiZbn3PhVK3XOGSlNInNE00t
-Note: sort will sort things alphabetically. uniq -u returns all unique lines if repeated lines are right next to one another (thus the sort command). 

Level 9:
-Ran the following command to find the password for the next level stored in the file data.txt in one of the few human-readable strings, preceded by several ‘=’ characters:
	more data.txt | grep -a ==
-Password for next level:
	G7w8LIi6J3kTb8A7j9LgrywtEUlyyp6s 
-Note: the -a tag means read a binary file as a normal text file.

Level 10:
-Ran the following command to decode the password which is stored in the file data.txt, which contains base64 encoded data:
	base64 -d data.txt
-Password for next level:
	6zPeziLdR2RKNdNYFNb6nVCKzphlXHBM
-Note: base64 -d means decode a file from base64.
